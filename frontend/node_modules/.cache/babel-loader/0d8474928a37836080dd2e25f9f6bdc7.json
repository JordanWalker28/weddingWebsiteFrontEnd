{"ast":null,"code":"export const signup = user => fetch(\"api/users\", {\n  method: \"POST\",\n  body: JSON.stringify(user),\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport const diet = user => fetch(\"api/diet\", {\n  method: \"POST\",\n  body: JSON.stringify(user),\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport const login = user => fetch(\"api/session\", {\n  method: \"POST\",\n  body: JSON.stringify(user),\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport const logout = () => fetch(\"api/session\", {\n  method: \"DELETE\"\n});\nexport const checkLoggedIn = async preloadedState => {\n  const response = await fetch('/api/session');\n  const {\n    user\n  } = await response.json();\n\n  if (user) {\n    preloadedState = {\n      session: user\n    };\n  }\n\n  return preloadedState;\n};","map":{"version":3,"names":["signup","user","fetch","method","body","JSON","stringify","headers","diet","login","logout","checkLoggedIn","preloadedState","response","json","session"],"sources":["/Users/jordanswalker/Documents/html/WeddingWebsite/SessionAuth/frontend/src/utils/session.js"],"sourcesContent":["export const signup = user => (\n    fetch(\"api/users\", {\n      method: \"POST\",\n      body: JSON.stringify(user),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n  );\n\n  export const diet = (user) => (\n    fetch(\"api/diet\", {\n      method: \"POST\",\n      body: JSON.stringify(user, ),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n  );\n  export const login = user => (\n    fetch(\"api/session\", {\n      method: \"POST\",\n      body: JSON.stringify(user),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n  );\n  export const logout = () => (\n    fetch(\"api/session\", { method: \"DELETE\" })\n  );\n\n  export const checkLoggedIn = async preloadedState => {\n    const response = await fetch('/api/session');\n    const { user } = await response.json();\n    if (user) {\n      preloadedState = {\n        session: user\n      };\n    }\n    return preloadedState;\n  };"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAGC,IAAI,IACtBC,KAAK,CAAC,WAAD,EAAc;EACjBC,MAAM,EAAE,MADS;EAEjBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFW;EAGjBM,OAAO,EAAE;IACP,gBAAgB;EADT;AAHQ,CAAd,CADF;AAUL,OAAO,MAAMC,IAAI,GAAIP,IAAD,IAClBC,KAAK,CAAC,UAAD,EAAa;EAChBC,MAAM,EAAE,MADQ;EAEhBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFU;EAGhBM,OAAO,EAAE;IACP,gBAAgB;EADT;AAHO,CAAb,CADA;AASP,OAAO,MAAME,KAAK,GAAGR,IAAI,IACvBC,KAAK,CAAC,aAAD,EAAgB;EACnBC,MAAM,EAAE,MADW;EAEnBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFa;EAGnBM,OAAO,EAAE;IACP,gBAAgB;EADT;AAHU,CAAhB,CADA;AASP,OAAO,MAAMG,MAAM,GAAG,MACpBR,KAAK,CAAC,aAAD,EAAgB;EAAEC,MAAM,EAAE;AAAV,CAAhB,CADA;AAIP,OAAO,MAAMQ,aAAa,GAAG,MAAMC,cAAN,IAAwB;EACnD,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAAC,cAAD,CAA5B;EACA,MAAM;IAAED;EAAF,IAAW,MAAMY,QAAQ,CAACC,IAAT,EAAvB;;EACA,IAAIb,IAAJ,EAAU;IACRW,cAAc,GAAG;MACfG,OAAO,EAAEd;IADM,CAAjB;EAGD;;EACD,OAAOW,cAAP;AACD,CATM"},"metadata":{},"sourceType":"module"}