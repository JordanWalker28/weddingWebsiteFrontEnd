{"ast":null,"code":"var _jsxFileName = \"/Users/jordanswalker/Documents/html/WeddingWebsite/SessionAuth/frontend/src/components/Diet.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { GetDataFromApi } from \"../utils/session\";\nimport { useState } from 'react';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = _ref => {\n  let {\n    session\n  } = _ref;\n  return {\n    session\n  };\n};\n\nfunction poop(name, username) {\n  fetch(\"api/diet/\" + username, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      firstParam: 'yourValue',\n      secondParam: 'yourOtherValue'\n    })\n  });\n}\n\nfunction App(_ref2) {\n  _s();\n\n  let {\n    session\n  } = _ref2;\n  const [textAddValue, updateInput] = useState();\n\n  const addNewText = () => {\n    if (!textAddValue) {\n      return;\n    } else {\n      poop(textAddValue, session.username);\n    }\n  };\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    GetDataFromApi(session.username).then(response => setData(response)).then(updateInput(data === null || data === void 0 ? void 0 : data.name));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eleContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"textbox\",\n          className: \"txtAdd\",\n          defaultValue: data === null || data === void 0 ? void 0 : data.name,\n          onChange: e => updateInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addNew\",\n          onClick: addNewText,\n          children: \"Add to Dictionary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jPVa0tvUoqEslKy4JCHp7iP0d5w=\");\n\n_c = App;\nexport default connect(mapStateToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","connect","GetDataFromApi","useState","useEffect","mapStateToProps","session","poop","name","username","fetch","method","headers","body","JSON","stringify","firstParam","secondParam","App","textAddValue","updateInput","addNewText","data","setData","then","response","e","target","value"],"sources":["/Users/jordanswalker/Documents/html/WeddingWebsite/SessionAuth/frontend/src/components/Diet.js"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { GetDataFromApi} from \"../utils/session\";\nimport { useState } from 'react';\nimport { useEffect } from \"react\"\n\nconst mapStateToProps = ({ session }) => ({\n  session\n});\n\nfunction poop(name, username) {\n     fetch(\"api/diet/\" + username, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        firstParam: 'yourValue',\n        secondParam: 'yourOtherValue',\n      })\n    })\n}\n\n\nfunction App ({ session }) {\n\n  const [textAddValue, updateInput] = useState();\n  const addNewText = () =>{\n    if(!textAddValue){ \n      return;\n    } else{\n      poop(textAddValue, session.username);\n    }\n  }\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    GetDataFromApi(session.username)\n    .then((response) => setData(response))\n    .then(updateInput(data?.name));\n  }, []);\n\n  return (\n    <div className=\"App\">\n        <div className=\"container\">\n            <div className=\"eleContainer\">\n              <textarea type=\"textbox\" className=\"txtAdd\" defaultValue={data?.name} onChange={(e)=>updateInput(e.target.value)}/>\n              <button className=\"addNew\" onClick={addNewText}>Add to Dictionary</button>\n            </div>\n        </div>\n    </div>\n  );\n}\n  export default connect(\n    mapStateToProps\n  )(App);"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,eAAe,GAAG;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAAkB;IACxCA;EADwC,CAAlB;AAAA,CAAxB;;AAIA,SAASC,IAAT,CAAcC,IAAd,EAAoBC,QAApB,EAA8B;EACzBC,KAAK,CAAC,cAAcD,QAAf,EAAyB;IAC7BE,MAAM,EAAE,KADqB;IAE7BC,OAAO,EAAE;MACP,UAAU,kBADH;MAEP,gBAAgB;IAFT,CAFoB;IAM7BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBC,UAAU,EAAE,WADO;MAEnBC,WAAW,EAAE;IAFM,CAAf;EANuB,CAAzB,CAAL;AAWJ;;AAGD,SAASC,GAAT,QAA2B;EAAA;;EAAA,IAAb;IAAEZ;EAAF,CAAa;EAEzB,MAAM,CAACa,YAAD,EAAeC,WAAf,IAA8BjB,QAAQ,EAA5C;;EACA,MAAMkB,UAAU,GAAG,MAAK;IACtB,IAAG,CAACF,YAAJ,EAAiB;MACf;IACD,CAFD,MAEM;MACJZ,IAAI,CAACY,YAAD,EAAeb,OAAO,CAACG,QAAvB,CAAJ;IACD;EACF,CAND;;EAQA,MAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;EACAC,SAAS,CAAC,MAAM;IACdF,cAAc,CAACI,OAAO,CAACG,QAAT,CAAd,CACCe,IADD,CACOC,QAAD,IAAcF,OAAO,CAACE,QAAD,CAD3B,EAECD,IAFD,CAEMJ,WAAW,CAACE,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEd,IAAP,CAFjB;EAGD,CAJQ,EAIN,EAJM,CAAT;EAMA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACI;MAAK,SAAS,EAAC,WAAf;MAAA,uBACI;QAAK,SAAS,EAAC,cAAf;QAAA,wBACE;UAAU,IAAI,EAAC,SAAf;UAAyB,SAAS,EAAC,QAAnC;UAA4C,YAAY,EAAEc,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEd,IAAhE;UAAsE,QAAQ,EAAGkB,CAAD,IAAKN,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;QAAhG;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAQ,SAAS,EAAC,QAAlB;UAA2B,OAAO,EAAEP,UAApC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GA5BQH,G;;KAAAA,G;AA6BP,eAAejB,OAAO,CACpBI,eADoB,CAAP,CAEba,GAFa,CAAf"},"metadata":{},"sourceType":"module"}